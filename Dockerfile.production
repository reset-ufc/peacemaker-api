# syntax = docker/dockerfile:1

ARG NODE_VERSION=20.18.1

# Base stage with shared configurations
FROM node:${NODE_VERSION}-slim AS base
WORKDIR /app
RUN corepack enable pnpm

# Development dependencies stage
FROM base AS deps

RUN apt-get update -qq && \
    apt-get install --no-install-recommends -y build-essential node-gyp pkg-config python-is-python3 && \
    rm -rf /var/lib/apt/lists/*
COPY package.json pnpm-lock.yaml ./

RUN pnpm install --frozen-lockfile

# Build stage
FROM deps AS builder

COPY . .

ARG NEST_API_PORT
ARG NEST_API_SERVER_URL
ARG AUTH_JWT_SECRET
ARG JWT_EXPIRATION_TIME_SECONDS
ARG GITHUB_OAUTH_CLIENT_ID
ARG GITHUB_OAUTH_CLIENT_SECRET
ARG GITHUB_OAUTH_CALLBACK_URL
ARG GITHUB_OAUTH_SCOPE
ARG ENCRYPTION_KEY
ARG ENCRYPTION_IV
ARG MONGODB_DATABASE_URL

ENV NEST_API_PORT=${NEST_API_PORT} \
    NEST_API_SERVER_URL=${NEST_API_SERVER_URL} \
    AUTH_JWT_SECRET=${AUTH_JWT_SECRET} \
    JWT_EXPIRATION_TIME_SECONDS=${JWT_EXPIRATION_TIME_SECONDS} \
    GITHUB_OAUTH_CLIENT_ID=${GITHUB_OAUTH_CLIENT_ID} \
    GITHUB_OAUTH_CLIENT_SECRET=${GITHUB_OAUTH_CLIENT_SECRET} \
    GITHUB_OAUTH_CALLBACK_URL=${GITHUB_OAUTH_CALLBACK_URL} \
    GITHUB_OAUTH_SCOPE=${GITHUB_OAUTH_SCOPE} \
    ENCRYPTION_KEY=${ENCRYPTION_KEY} \
    ENCRYPTION_IV=${ENCRYPTION_IV} \
    MONGODB_DATABASE_URL=${MONGODB_DATABASE_URL}

RUN pnpm run build

# Production stage
FROM base AS production
ENV NODE_ENV=production

COPY --from=builder /app/dist /app/dist
COPY --from=builder /app/package.json /app/pnpm-lock.yaml ./
RUN pnpm install --frozen-lockfile

EXPOSE $NEST_API_PORT
CMD [ "pnpm", "run", "start:prod" ]